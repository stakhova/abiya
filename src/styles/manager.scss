.manager {
  position: relative;
}

.manager:after {
  content: '';
  position: absolute;
  width: calc(100% + 0.2rem);
  bottom: -0.2rem;
  left: -0.1rem;
  height: 0.2rem;
  z-index: 1;
  background-color: #4B4B4B;
}

.modal__managers-save {
  display: none;
}

.modal__managers .project__top-icon {
  background-color: rgba(86, 64, 115, 0.35);
  border-radius: 0.8rem;
  position: relative;
}

.modal__managers .project__top-icon img {
  position: absolute;
  width: 3.2rem;
  height: 3.2rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  filter: invert(24%) sepia(48%) saturate(626%) hue-rotate(224deg) brightness(92%) contrast(85%);
}

.modal__managers td > * {
  padding: 1.6rem 2.4rem;
}

.modal__managers-btn {
  display: -ms-flexbox;
  display: flex;
  gap: 2.4rem;
  -ms-flex-pack: center;
  justify-content: center;
}

.modal__managers-btn > * {
  max-width: 20.8rem;
}

.modal__managers-btn.big > * {
  max-width: 28.8rem;
}

.location__more-block {
  display: none;
}

.modal__managers div.form {
  gap: 1.2rem;
}

.modal__managers .contact__form {
  gap: 2rem 1.6rem;
  -ms-flex-direction: row;
  flex-direction: row;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.modal__managers-tracker-title {
  font: 400 2rem/normal var(--RozhaOne);
}

.contact__form .form__input:nth-of-type(1), .contact__form .form__input:nth-of-type(2) {
  width: calc(50% - 0.8rem);
}

.contact__form .form__input:nth-of-type(3), .contact__form .form__input:nth-of-type(4), .contact__form .form__input:nth-of-type(5) {
  width: calc((100% - 3.2rem)/3);
}

.contact__form .modal__managers-btn {
  width: 100%;
}

.modal__managers .form__input input, .modal__managers .form__input textarea {
  font: 400 1.6rem/2.6rem var(--Arimo);
}

.select2-container--default .select2-selection--single .select2-selection__rendered {
  height: 5.6rem;
  border-radius: 1.2rem;
  font: 400 1.6rem/2.6rem var(--Arimo);
}

.select2-container .select2-selection--single {
  border: 0.1rem solid rgba(179, 163, 132, 0.5);
  height: 5.6rem;
  border-radius: 1.2rem;
  padding: 1.4rem 2.4rem;
}

.select2-container--default .select2-selection--single .select2-selection__arrow b {
  display: none;
}

.select2-container--default .select2-selection--single .select2-selection__arrow {
  top: 50%;
  transform: translateY(-50%);
}

.select2-container--default .select2-selection--single .select2-selection__arrow:after {
  content: '';
  position: absolute;
  top: 50%;
  right: 2.2rem;
  transform: translateY(-50%);
  width: 2.4rem;
  height: 1.2rem;
  background: url("../img/arr.svg") center/2.4rem 1.2rem no-repeat;
}

.select2-container--default .select2-results__option--highlighted[aria-selected] {
  background-color: var(--color-beige);
  color: var(--color-text);
}

.select2-search--dropdown {
  display: none;
}

.select2-results__option {
  padding: 1.2rem 2.4rem;
  font: 400 1.6rem/2.6rem var(--Arimo);
}

label.error {
  font: 400 1.6rem/2.6rem var(--Arimo);
  position: absolute;
  bottom: -2.6rem;
  left: 0;
  color: red;
}

.delete__item {
  position: absolute;
  top: 50%;
  right: -3rem;
  padding: 0 !important;
  transform: translateY(-50%);
  width: 3rem;
}

tr {
  position: relative;
}

table {
  position: relative;
}

.project__table-manager {
  margin: 4rem 0;
}

.project__link-wrap > * {
  font: 700 1.2rem/normal var(--Arimo);
  color: #4B4B4B;
  position: relative;
}

.project__link-wrap > *:first-child:after {
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 0.15rem;
  height: 1.2rem;
  right: -1.2rem;
  background-color: #4B4B4B;
}

.calendar__wrap {
  display: -ms-flexbox;
  display: flex;
  gap: 1.6rem;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 2.4rem 0;
}

.calendar__wrap > * {
  width: calc(50% - 0.8rem);
}

.calendar__wrap-duration {
  display: none;
  color: #564073;
  font: 700 1.6rem/normal var(--Arimo);
}

.calendar__wrap {
  position: relative;
}

.calendar__wrap .error {
  width: 100%;
}

.calendar__wrap-duration.active {
  display: block;
}

.calendar__line {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to right, transparent 50%, #564073 50%);
  background-size: 0.6rem 100%;
}

.location__save.disable {
  opacity: 0.7;
  pointer-events: none;
}

.calendar__line-wrap {
  position: absolute;
  height: 0.2rem;
  top: 50%;
  transform: translateY(-50%);
  width: 100%;
  /* Make the line-wrap span the full viewport width */
  left: 0;
}

.calendar__point-wrap {
  position: relative;
}

.date {
  position: absolute;
  font: 400 1.6rem/normal var(--RozhaOne);
  text-transform: capitalize;
  top: 3rem;
}

.modal__calendar.active .calendar__illustrate {
  display: block;
}

.modal__calendar.active .calendar__point {
  display: block;
}

.modal__calendar.active .calendar__wrap-duration {
  display: block;
}

.modal__calendar.active .modal__managers-btn {
  display: -ms-flexbox;
  display: flex;
}

.inspections__form {
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-direction: row;
  flex-direction: row;
}

.inspections__form .modal__managers-btn {
  width: 100%;
}

.form__input {
  width: 100%;
}

.form__input.half {
  /*width: calc(50% - 1.2rem);*/
}

.modal__calendar .modal__managers-btn {
  display: none;
}

.calendar__wrap {
  -ms-flex-direction: row;
  flex-direction: row;
}

.calendar__wrap > * {
  width: calc(50% - 0.8rem);
}

.calendar__point-desc {
  max-width: 14rem;
  text-align: center;
  white-space: normal;
  display: block;
  -webkit-line-clamp: 4;
  overflow: hidden;
  display: -webkit-box;
}

.calendar__date {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
}

.calendar__point-content {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.4rem;
  -ms-flex-align: center;
  align-items: center;
  max-height: 17.3rem;
  overflow: visible;
  overflow-y: hidden;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  width: 100%;
}

.calendar__date .calendar__point-wrap:before {
  content: '';
  position: absolute;
  height: 6rem;
  width: 0.1rem;
  left: 50%;
  background-color: #574275;
}

.calendar__date .calendar__point-wrap:nth-child(even):before {
  top: 0;
}

.calendar__date .calendar__point-wrap:nth-child(odd):before {
  bottom: 0;
}

.calendar__point-date {
  font: 400 1.6rem/normal var(--RozhaOne);
  color: #564073;
  text-align: center;
  position: relative;
}

.calendar__point-desc {
  font: 400 1.2rem/140% var(--Arimo);
  text-align: center;
  color: #4B4B4B;
}

.calendar__point-wrap:nth-child(even) .calendar__point-content {
  top: 7.1rem;
}

.calendar__point-wrap:nth-child(odd) .calendar__point-content {
  top: -17.3rem;
}

.calendar__illustrate {
  position: relative;
  display: none;
  margin-bottom: 4rem;
  padding-bottom: 4rem;
}

.calendar__illustrate-wrap {
  width: 100%;
}

.calendar__date {
  display: -ms-flexbox;
  display: flex;
  padding: 19.3rem 0 19.3rem;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.calendar__illustrate {
  overflow-x: auto;
  overflow-y: hidden;
  cursor: move;
  /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -webkit-grab;
}

.calendar__date:active {
  cursor: grabbing;
  cursor: -webkit-grabbing;
}

.calendar__illustrate::-webkit-scrollbar {
  background-color: rgba(0, 0, 0, 0.1);
  height: 1rem;
  border-radius: 0.5rem;
}

.calendar__illustrate::-webkit-scrollbar-thumb {
  background-color: var(--color-violet);
  border-radius: 0.5rem;
}

.calendar__point-wrap {
  position: relative;
  width: 100%;
  min-width: 15rem;
  height: 100%;
}

.calendar__point-wrap:after {
  content: '';
  position: absolute;
  width: 1.6rem;
  height: 1.6rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background-color: #574275;
}

.calendar__start .date, .calendar__end .date  {
  left: 50%;
  transform: translateX(-50%);
}

/*.calendar__end .date {*/
/*  right: -3.3rem;*/
/*}*/

.calendar__end:before, .calendar__start:before {
  display: none;
}

.calendar__duration-wrap {
  display: none;
}

.calendar__point {
  position: relative;
}

.calendar__point-wrap .calendar__point:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 0.1rem;
  background-image: linear-gradient(to right, transparent 50%, #564073 50%);
  background-size: 0.6rem 100%;
}

.calendar__point-delete {
  width: 1.5rem;
  height: 1.5rem;
  position: absolute;
  top: 0rem;
  right: -2rem;
}

.calendar__point-delete:after {
  content: '';
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
  width: 1.5rem;
  height: 1.5rem;
  background: url("../img/close.svg") center/1.5rem 1.5rem no-repeat;
}

.modal__content-big .form__file-item h3 {
  max-width: 100%;
}

.modal__content-biggest {
  max-width: 154rem;
}

.modal__content-biggest .modal__overflow {
  padding: 6rem;
}

.chart__list {
  display: -ms-flexbox;
  display: flex;
  gap: 4rem;
}

.chart__item {
  width: calc((100% - 8rem)/3);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 2rem;
}

.chart__flex {
  display: -ms-flexbox;
  display: flex;
  gap: 4rem;
  -ms-flex-align: center;
  align-items: center;
}

.chart__info {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.8rem;
}

.chart__info-item {
  display: -ms-flexbox;
  display: flex;
  gap: 6rem;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding-left: 2.4rem;
  position: relative;
}

.chart__info-item:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: 1.6rem;
  height: 1.6rem;
}

.chart__info-item:first-child:after {
  background-color: #564073;
}

.chart__info-item:nth-child(2):after {
  background-color: #C4BCCE;
}

.chart__info-item:nth-child(3):after {
  background-color: #EDE8E0;
}

.chart__info-item:nth-child(4):after {
  background-color: #B3A384;
}

.chart__info-item:last-child {
  padding-left: 0;
  margin-top: 0.4rem;
  padding-top: 1.2rem;
  border-top: 0.1rem solid rgba(87, 66, 117, 0.5);
}

.chart__info {
  max-width: 50%;
  width: 100%;
}

.chart__wrap table tbody tr:last-child {
  background: rgba(86, 64, 115, 0.1);
}

.chart__wrap table tbody tr:last-child .project__clarify-text {
  font-weight: 700;
}

.chart__wrap {
  margin-bottom: 6.4rem;
}

.chart {
  width: 18rem !important;
  height: 18rem !important;
}

.chart__info-item h3 {
  font: 400 1.2rem/normal var(--Arimo);
}

.chart__info-item h4 {
  color: #564073;
  font: 700 1.2rem/normal var(--Arimo);
  text-transform: uppercase;
}

.chart__item > h3 {
  font: 400 1.6rem/normal var(--RozhaOne);
  text-transform: capitalize;
}

.modal__managers-tracker .project__table th {
  border: none;
}

.form__input-flex {
  display: -ms-flexbox;
  display: flex;
  gap: 2.4rem;
}

.drop {
  position: relative;
  width: -moz-max-content;
  width: max-content;
}

.drop__btn {
  padding: 0.6rem 3.2rem 0.6rem 1.6rem;
  position: relative;
  cursor: pointer;
  font: 400 1.2rem/normal var(--Arimo);
  color: #4B4B4B;
  width: -moz-max-content;
  width: max-content;
  min-width: 12.7rem;
  border-radius: 0.8rem;
}

.drop__btn:after {
  content: '';
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 1.6rem;
  width: 1.4rem;
  height: 0.7rem;
  background: url(../img/triangle.svg) center/1.4rem 0.7rem no-repeat;
}

.drop__menu {
  z-index: 5;
  left: 50%;
  width: 100%;
  top: 2.8rem;
  transform: translateX(-50%);
  position: absolute;
  border-radius: 0.8rem;
  box-shadow: 0 0.5rem 1.46rem 0 rgba(0, 0, 0, 0.25);
  background-color: var(--color-white);
  overflow: hidden;
  display: none;
}

.drop__menu-flex {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
}

.drop__menu-flex > * {
  text-align: left;
  padding: 1rem 1.6rem;
  font: 400 1.2rem/normal var(--Arimo);
  transition: 0.2s ease;
  white-space: nowrap;
  cursor: pointer;
}

.drop__menu-flex > *[data-status="1"]:hover {
  background-color: rgba(183, 226, 182, 0.5);
}

.drop__menu-flex > *[data-status="2"]:hover {
  background-color: #F0C5BF;
}

.drop__menu-flex > *[data-status="3"]:hover {
  background-color: #FFE8CC;
}

.drop__menu-flex > *[data-status="4"]:hover {
  background-color: #E8E8E8;
}

.manager__input input, .amount__date input {
  font: 400 1.4rem/normal var(--Arimo);
  border: none;
}

.total .project__clarify-text {
  font-weight: 700;
}

.form__input-row {
  display: -ms-flexbox;
  display: flex;
  gap: 0.8rem;
}

.total {
  background-color: rgba(86, 64, 115, 0.1);
  border: 0.1rem solid rgba(87, 66, 117, 0.5);
}

.total td {
  font-weight: 700;
  border: 0.1rem solid rgba(87, 66, 117, 0.5);
}

.total td:first-child > * {
  text-align: left;
  font: 400 1.6rem/normal var(--RozhaOne);
}

.location__more-block .drop__btn {
  padding: 1.5rem 3.2rem 1.5rem 1.6rem;
  font: 400 1.6rem/2.6rem var(--Arimo);
  width: 100%;
}

.location__more-block .drop__menu {
  top: 7rem;
}

.location__more-block .drop__menu-flex > * {
  font: 400 1.6rem/2.6rem var(--Arimo);
}

.location__more-block .drop {
  min-width: 19rem;
}

.financial__input-wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
}

.financial__input-wrap span {
  font: 400 1.4rem/normal var(--Arimo);
}

.modal__content-invoices {
  max-width: 135.5rem;
}

.modal__content-guarantees {
  max-width: 145.5rem;
}

.modal__content-invoices .modal__overflow {
  padding: 6rem 4rem 4rem;
}

.modal__content-invoices .project__table th {
  font-size: 1.6rem;
}

.modal__content-invoices .project__table-clarify th {
  padding: 0.6rem 2rem;
}

.location__more.disabled {
  pointer-events: none;
  opacity: 0.5;
}

.total__mob-wrap {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}

.supplier {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  gap: 0.4rem;
  -ms-flex-align: center;
  align-items: center;
}

.supplier h3 {
  margin-right: 1.6rem;
  font: 400 1.4rem/normal var(--Arimo);
}

.supplier > span {
  padding: 0.6rem 1.6rem;
  border-radius: 0.8rem;
  background: #E8E8E8;
  font: 400 1rem/normal var(--Arimo);
}

.task__more-form {
  display: none;
}

.task__more-form.active {
  display: -ms-flexbox;
  display: flex;
}

.task__more-form .section__button {
  padding: 1rem 10rem;
  text-align: center;
  width: -moz-max-content;
  width: max-content;
}

.task__more {
  margin-top: 1.6rem;
}

.task__more-btn {
  padding: 1rem 5rem;
  width: -moz-max-content;
  width: max-content;
}

.calendar__input input {
  width: 100% !important;
}

.comleted > * .delete__item {
  pointer-events: visible;
}

.sortable-placeholder {
  background-color: #f0f0f0;
  border: 2px dashed #ccc;
  height: 40px;
  visibility: visible !important;
}

.amount__text {
  font: 400 1.6rem/normal var(--RozhaOne);
}

h3.amount__text {
  margin-top: 1.6rem;
}

.modal__managers-tracker .drop {
  margin: 0 auto;
}

.modal__managers-tracker .drop__btn {
  width: -moz-max-content;
  width: max-content;
  min-width: 10.62rem;
}

.modal__managers-tracker .drop-wrap {
  padding: 1.6rem 0.2rem;
}

.highlight {
  background-color: rgba(87, 66, 117, 0.5);
}

@media only screen and (max-width: 1440px) {
  .modal__content-biggest {
    max-width: 90%;
  }
  .chart__info-item {
    gap: 1rem;
  }
}

.purchases__modal-more {
  margin: 2rem 0;
}

/*.supplier__amount {*/
/*  display: none;*/
/*}*/
/*.supplier__amount.active {*/
/*  display: -ms-flexbox;*/
/*  display: flex;*/
/*}*/
.purchases__modal .task__more {
  margin: 2rem 0;
}

.task__more {
  display: none;
}

.task__more.desk {
  display: block;
}

.calendar__start {
  left: 0;
}

.calendar__end {
  right: 0;
}

.modal__managers-tracker .task__more {
  display: block;
}

.manager__input input.disabled, .drop-wrap.disabled {
  pointer-events: none;
}

@media only screen and (max-width: 666px) {
  .project__table-manager {
    margin: 1.6rem 0;
  }
  .delete__item {
    right: -1rem;
    width: 2rem;
  }
  .modal__managers .clarify__mob-wrap {
    margin-top: 3rem;
  }
  .clarify__mob-wrap .delete__item {
    transform: none;
    top: 0.5rem;
  }
  .project__table-manager tr {
    position: relative;
  }
  .project__table-manager .delete__item {
    right: 0;
  }
  .project__clarify-mob {
    position: relative;
  }
  .change__table .delete__item {
    transform: none;
    top: -3rem;
  }
  .clarify__mob-wrap table {
    position: unset;
  }
  .project__table-manager th {
    font-size: 1.2rem;
  }
  .modal__managers td > * {
    font-size: 1rem;
  }
  .project__clarify-file {
    font-size: 1rem;
  }
  .modal__managers .project__top-icon img {
    width: 2rem;
    height: 2rem;
  }
  .chart__wrap .clarify__mob-wrap tbody.active {
    display: contents;
  }
  .chart__wrap .clarify__mob-wrap td:first-child {
    background-color: transparent;
  }
  .chart__wrap .clarify__mob-text {
    font: 400 1rem/normal var(--Arimo);
  }
  .chart__flex {
    -ms-flex-direction: column;
    flex-direction: column;
    padding: 0 2.4rem;
  }
  .chart__list {
    -ms-flex-direction: column;
    flex-direction: column;
  }
  .chart__item {
    width: 100%;
  }
  .chart__info {
    max-width: 100%;
  }
  .chart__item > h3 {
    display: none;
  }
  .modal__content-biggest .modal__overflow {
    padding: 4rem 1.6rem;
  }
  .modal__managers td > * {
    padding: 2rem 1rem;
  }
  .chart__wrap tbody tr:last-of-type .clarify__mob-text {
    font: 400 1.2rem/normal var(--RozhaOne);
  }
  .chart__wrap.project__table-clarify th {
    padding: 2rem 1rem;
    font-size: 1.2rem;
  }
  .clarify__mob-wrap .form__line {
    margin-bottom: 1.6rem;
  }
  .chart__wrap {
    margin: 0;
  }
  .form__input.half {
    width: 100%;
  }
  label.error {
    font-size: 1.2rem;
    bottom: -2.2rem;
  }
  .contact__form > * {
    width: 100% !important;
  }
  .select2-container .select2-selection--single {
    padding: 1.4rem 1.2rem;
    height: 4.4rem;
  }
  .modal__managers .form__input input, .modal__managers .form__input textarea {
    font-size: 1.2rem;
    line-height: 1.4rem;
    padding: 1.4rem;
  }
  .select2-container--default .select2-selection--single .select2-selection__rendered {
    padding-left: 0;
    font-size: 1.2rem;
    border-radius: 0;
    height: 4.4rem;
    line-height: 1.4rem;
  }
  .select2-results__option {
    padding: 0.8rem;
    font-size: 1.2rem;
    line-height: 1.4rem;
  }
  .location__more-block .drop__btn {
    font-size: 1.2rem;
    line-height: 1.4rem;
  }
  .manager__input input, .amount__date input {
    font-size: 1rem;
  }
  .total__mob-wrap tbody {
    display: contents !important;
  }
  .total__mob-wrap {
    margin-top: 3rem;
  }
  .total__title {
    font: 400 1.4rem/normal var(--RozhaOne);
  }
  .total td:first-child > * {
    background: rgba(87, 66, 117, 0.3);
    font-size: 1.2rem;
  }
  .total {
    background-color: var(--color-white);
  }
  .clarify__mob-wrap .total td:first-child {
    border: 1px solid rgba(87, 66, 117, 0.5);
  }
  tr {
    position: unset;
  }
  .modal__content-invoices .modal__overflow {
    padding: 4rem 1.6rem;
  }
  .modal__managers .change__table td > * {
    padding: 1rem;
  }
  .location__more-block .drop__menu {
    top: 5rem;
  }
  .location__more-block .drop__menu-flex > * {
    font-size: 1.2rem;
    line-height: 1.4rem;
  }
  .purchases__modal .project__table-clarify th {
    text-align: center;
    font-size: 1.2rem;
  }
  .purchases__modal .project__table thead {
    background-color: rgba(87, 66, 117, 0.3);
  }
  .purchases__modal .total td:first-child > *, .purchases__modal .clarify__mob-wrap td:first-child {
    background: transparent;
  }
  .purchases__modal .total td {
    font-weight: 400;
  }
  .financial__input-wrap span {
    font-size: 1rem;
  }
  .supplier > span {
    padding: 0.6rem 1.2rem;
  }
  .total .project__clarify-text {
    font-weight: 400;
  }
  .purchases__modal .total td:first-child > * {
    font: 400 1rem/normal var(--Arimo);
  }
  .task__more-btn {
    padding: 0.6rem 2rem;
  }
  .task__more {
    margin-top: 1rem;
  }
  .calendar__date {
    position: relative;
    -ms-flex-wrap: wrap;
    -ms-flex-direction: column;
    flex-direction: column;
  }
  .calendar__date > * {
    width: 50%;
    position: relative;
  }
  .calendar__point-wrap:nth-child(even) .calendar__point-content {
    left: -1.5rem;
  }
  .calendar__point-wrap:nth-child(odd) .calendar__point-content {
    right: calc(-100% - 1.5rem);
    left: unset;
  }
  .calendar__point-wrap:nth-child(odd):after {
    right: -0.8rem;
  }
  .calendar__point-wrap:nth-child(even):after {
    left: 50%;
  }
  .calendar__date {
    padding: 5rem 2rem;
  }
  .calendar__date .calendar__point-wrap:before {
    height: 0.1rem;
    width: 2rem;
    top: 50% !important;
  }
  .calendar__date .calendar__point-wrap:nth-child(even):before {
    left: calc(50% - 2rem);
  }
  .calendar__start {
    top: 0 !important;
  }
  .calendar__point-content {
    position: relative;
    top: 50% !important;
    /*transform: translateY(-50%);*/
    overflow: visible;
    max-height: max-content;
  }
  .calendar__point:nth-child(even) {
    margin-top: 10rem;
    padding-left: 3rem;
  }
  .calendar__point:nth-child(even) .calendar__point-content {
    margin: 0 !important;
  }
  .calendar__start {
    margin-top: 0 !important;
  }
  .calendar__start:after {
    left: 50% !important;
    transform: translateX(-50%);
  }
  .calendar__end {
    /*padding-top: 3rem;*/
    margin: 0 !important;
  }
  .calendar__end:after {
    left: 50% !important;
    transform: translateX(-50%);
  }
  .calendar__point-wrap{
    min-height: 7rem;
    min-width: auto;
  }
  .modal__calendar.active .calendar__point{
    min-height: 7rem;
  }
  .calendar__point-wrap .calendar__point:after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0.1rem;
    height: 100%;
    background-image: linear-gradient(to bottom, transparent 50%, #564073 50%);
    background-size: 100% 0.6rem;
    transform: translateY(-50%);
  }
  .calendar__line-wrap {
    position: unset;
    margin: 0;
    height: 100%;
    width: 0.2rem;
  }
  .calendar__illustrate {
    margin: 4rem 0;
  }
  .calendar__start .date, .calendar__end .date {
    top: 4rem;
    left: calc(50% + 6rem);
    transform: translate(-50%,-50%);
    right: unset;
    color: #564073;

  }
  .calendar__end .date {
    /*bottom: -0.5rem;*/
    /*top: unset;*/
  }
  .form__input-flex {
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.6rem;
  }
  .amount__text {
    font-size: 1.4rem;
  }
  .task__more.desk {
    display: none;
  }
  .supplier__amount.active {
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
  .task__more.desk {
    display: none !important;
  }
  .task__more {
    display: block !important;
  }
  .modal__managers-tracker .drop {
    margin: 0;
    font-size: 1rem;
  }
  .modal__managers-tracker .drop__btn, .modal__managers-tracker .drop__menu-flex > * {
    font-size: 1rem;
  }
  .amount__date {
    text-align: left;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
